#include <iostream>
#include <fstream>
#include <string>
#include "md5.h"
using namespace std;

string task_list[] = { "1. Find secret.",
"2. Decode pass" };

const int rad1_SZ = 94;
const unsigned char rad1[rad1_SZ] = { 0x01, 0x06, 0x00, 0x5e, 0x0c, 0xa6, 0xe3, 0x40, 0x20, 0x91, 0x85, 0x3d, 0x31, 0xc2, 0x78, 0x7f,
	0x56, 0x74, 0xf3, 0x5e, 0x01, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x05, 0x06, 0x00, 0x00, 0x00,
	0x17, 0x3d, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x4f, 0x0c, 0x02, 0x01, 0x00, 0x0a, 0x01, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x04, 0x06, 0x0a, 0x0a, 0x0a, 0x07, 0x1f, 0x13, 0x38, 0x43, 0x2d, 0x38, 0x39,
	0x2d, 0x41, 0x35, 0x2d, 0x43, 0x31, 0x2d, 0x44, 0x43, 0x2d, 0x43, 0x36, 0x50, 0x12, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//01 06 00 5e 0c a6 e3 40 20 91 85 3d 31 c2 78 7f 56 74 f3 5e 01 07 62 6f 6e 75 73 05 06 00 00 00 17 3d 06 00 00 00 0f 4f 0c 02 01 00 0a 01 62 6f 6e 75 73 04 06 0a 0a 0a 07 1f 13 38 43 2d 38 39 2d 41 35 2d 43 31 2d 44 43 2d 43 36 50 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

//0x01 0x06 0x00 0x5e 0x0c 0xa6 0xe3 0x40 0x20 0x91 0x85 0x3d 0x31 0xc2 0x78 0x7f 0x56 0x74 0xf3 0x5e 0x01 0x07 0x62 0x6f 0x6e 0x75 0x73 0x05 0x06 0x00 0x00 0x00 0x17 0x3d 0x06 0x00 0x00 0x00 0x0f 0x4f 0x0c 0x02 0x01 0x00 0x0a 0x01 0x62 0x6f 0x6e 0x75 0x73 0x04 0x06 0x0a 0x0a 0x0a 0x07 0x1f 0x13 0x38 0x43 0x2d 0x38 0x39 0x2d 0x41 0x35 0x2d 0x43 0x31 0x2d 0x44 0x43 0x2d 0x43 0x36 0x50 0x12 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00


const int r1_md5_SZ = 16;
const unsigned char r1_md5[r1_md5_SZ] = { 0xd5, 0xbc, 0xd4, 0x09, 0x8d, 0x35, 0x62, 0x29, 0x6c,
0x01, 0xf8, 0x4a, 0x18, 0x04, 0xdb, 0xb5 };


const string r1_md5_STR = "d5bcd4098d3562296c01f84a1804dbb5";

string charToString(const unsigned char c[], int size) {
	string s;
	for (int i = 0; i < size; ++i)
		s += c[i];
	return s;
}

int main()
{
	string ifname, ofname;
	int tasknum;
	for (int i = 0; i < 2; i++)
		cout << task_list[i] << endl;
	cout << "Task number: ";
	cin >> tasknum;
	//opening
	switch (tasknum)
	{
	case 1:
	{
		/*
		string s_rad1(charToString(rad1, rad1_SZ));
		MD5 m(s_rad1);
		m.finalize();
		string ms = m.hexdigest();
		//4e811e1f09feb06c31a401c5a36465a0
		*/

		string s_rad1(charToString(rad1, rad1_SZ));
		//gen numbers
		unsigned int suc_int = -1;
		for (unsigned int j = 1; j <= 5; ++j) {
			for (unsigned int i = 0; i < pow(10, j); ++i) {
				string si = (i < pow(10, j - 1)) ? to_string(i + int(pow(10, j - 1))) : to_string(i);
				if (i < pow(10, j - 1))
					si[0] = '0';

				string sk = s_rad1;
				for (auto it = si.begin(); it != si.end(); it++)
					sk += *it;
				MD5 m(sk);
				m.finalize();
				string ms = m.hexdigest();
				if (ms == r1_md5_STR) {
					cout << suc_int << endl;
					//break;
				}
			}
		}
		
		break;
	}
	case 2:
	{
		break;
	}
	default:
		cerr << "wrong_action";
		break;
	}
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
